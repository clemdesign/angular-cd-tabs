{"version":3,"file":"angular-cd-tabs.js","sources":["ng://angular-cd-tabs/lib/cd-tab-button.component.ts","ng://angular-cd-tabs/lib/cd-tab-bar.component.ts","ng://angular-cd-tabs/lib/cd-tab-content.component.ts","ng://angular-cd-tabs/lib/cd-tabs.component.ts","ng://angular-cd-tabs/lib/cd-tabs.module.ts"],"sourcesContent":["import {AfterContentInit, Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'cd-tab-button',\n    styleUrls: ['./cd-tab-button.component.scss'],\n    template: `\n        <ng-content></ng-content>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CdTabButtonComponent implements AfterContentInit {\n    @Output() buttonClick = new EventEmitter<CdTabButtonComponent>();\n\n    @Output()\n    get content() {\n        if (this.eltRef && this.eltRef.nativeElement && this.eltRef.nativeElement.childNodes[0]) {\n            return this.eltRef.nativeElement.childNodes[0].innerHTML;\n        }\n        return '';\n    }\n\n    @Input() ripple: string;\n    @Input() tab: string;\n    @Input() routerLink: Array<string>;\n    @Input() iconPosition = 'center';\n    @Input() disabled: boolean;\n\n    @Input()\n    set selected(value) {\n        this.active = value;\n        this.buildCss();\n    }\n\n    active: boolean;\n    elt: HTMLElement;\n\n    @HostListener('click', ['$event.x', '$event.y'])\n    onClick(coordX, coordY) {\n        this.buttonClick.emit(this);\n\n        if (this.ripple === 'unbounded' || this.ripple === 'bounded') {\n            this.addRipple(coordX, coordY);\n        }\n    }\n\n    constructor(private eltRef: ElementRef) {\n    }\n\n    private get hasLabel() {\n        return !!this.elt.querySelector('ion-label');\n    }\n\n    private get hasIcon() {\n        return !!this.elt.querySelector('ion-icon');\n    }\n\n    ngAfterContentInit() {\n        this.elt = this.eltRef.nativeElement;\n\n        this.buildCss();\n    }\n\n    /**\n     * Add Ripple to tab button\n     */\n    async addRipple(x: number, y: number) {\n        return new Promise<() => void>(resolve => {\n            const rect = this.elt.getBoundingClientRect();\n            const width = rect.width;\n            const height = rect.height;\n            const hypotenuse = Math.sqrt(width * width + height * height);\n            const maxDim = Math.max(height, width);\n            const maxRadius = this.ripple === 'bounded' ? maxDim : hypotenuse + PADDING;\n            const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n            const finalScale = maxRadius / initialSize;\n            let posX = x - rect.left;\n            let posY = y - rect.top;\n            if (this.ripple === 'bounded') {\n                posX = width * 0.5;\n                posY = height * 0.5;\n            }\n            const styleX = posX - initialSize * 0.5;\n            const styleY = posY - initialSize * 0.5;\n            const moveX = width * 0.5 - posX;\n            const moveY = height * 0.5 - posY;\n\n            const div = document.createElement('div');\n            div.classList.add('cd-ripple-effect');\n            const style = div.style;\n            style.top = styleY + 'px';\n            style.left = styleX + 'px';\n            style.width = style.height = initialSize + 'px';\n            style.setProperty('--final-scale', `${finalScale}`);\n            style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n\n            const container = this.elt.shadowRoot || this.elt;\n            container.appendChild(div);\n            setTimeout(() => {\n                removeRipple(div);\n\n                resolve(() => {\n                });\n            }, 225 + 100);\n        });\n    }\n\n    /**\n     * Build Css for component\n     */\n    private buildCss() {\n        let className = 'cd-tab-button ';\n        if (this.active) {\n            className += 'cd-tab-selected ';\n        }\n        if (this.hasIcon) {\n            className += 'cd-tab-has-icon ';\n        }\n        if (this.hasLabel) {\n            className += 'cd-tab-has-label ';\n        }\n        if (this.hasLabel && !this.hasIcon) {\n            className += 'cd-tab-has-label-only ';\n        }\n        if (!this.hasLabel && this.hasIcon) {\n            className += 'cd-tab-has-icon-only ';\n        }\n        if (this.iconPosition === 'start') {\n            className += 'cd-tab-icon-start ';\n        }\n        if (this.iconPosition === 'end') {\n            className += 'cd-tab-icon-end ';\n        }\n        if (this.disabled === true) {\n            className += 'cd-tab-disabled ';\n        }\n\n        this.elt.className = className;\n    }\n}\n\nconst removeRipple = (ripple: HTMLElement) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\n\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\n","import {\n  AfterViewInit,\n  Component, ContentChildren, ElementRef, EventEmitter,\n  Input, OnInit, Output,\n  QueryList\n} from '@angular/core';\nimport {CdTabButtonComponent} from './cd-tab-button.component';\nimport {NavigationEnd, Router} from '@angular/router';\n\nexport interface CdTabBarInterface {\n    num: number;\n    tabId: string;\n    tabButton: CdTabButtonComponent;\n}\n\n@Component({\n    selector: 'cd-tab-bar',\n    template: `\n      <div class=\"bar-container\"\n           [class.vertical]=\"disposition === 'vertical'\"\n           [class.align-center]=\"disposition === 'center'\"\n           [class.align-right]=\"disposition === 'right'\"\n           [class.segments]=\"displayMode === 'segments'\">\n        <ng-content></ng-content>\n      </div>`,\n    styleUrls: ['./cd-tab-bar.component.scss']\n})\nexport class CdTabBarComponent implements AfterViewInit, OnInit {\n    @ContentChildren(CdTabButtonComponent) tabsButton: QueryList<CdTabButtonComponent>;\n\n    @Output() tabSelectedEvent = new EventEmitter<CdTabBarInterface>();\n\n    @Output()\n    get buttons() {\n        return this.tabsButton;\n    }\n\n    @Input() disposition = '';\n    @Input() displayMode = 'default';\n\n    @Input()\n    set selected(value) {\n        this.active = value;\n    }\n\n    @Input()\n    set color(value) {\n        this.colorValue = value;\n        this.buildCss();\n    }\n\n    active: boolean;\n    colorValue: string;\n    selectMode: string;\n    baseClass = '';\n\n    constructor(private elt: ElementRef, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (this.active === undefined) {\n            this.active = false;\n        }\n        if (this.elt && this.elt.nativeElement) {\n            this.baseClass = this.elt.nativeElement.className;\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.selectMode === 'router') {\n            // deactivate all tabs if router link defined\n            this.tabsButton.toArray().forEach((tabFn) => {\n                tabFn.active = false;\n            });\n\n            // look for select tab according route\n            this.router.events.subscribe((res) => {\n                if (res instanceof NavigationEnd) {\n                    const relatedTabs = this.tabsButton.filter((tabFn) =>\n                        (tabFn.routerLink.join('/').length > 3 && res.url.indexOf(tabFn.routerLink.join('/')) >= 0) ||\n                        (tabFn.routerLink.join('/') === res.url));\n\n                    // decativate all tabs\n                    this.deactivateAllTabs();\n\n                    // if related url found\n                    if (relatedTabs.length > 0) {\n                        this.selectTab(relatedTabs[0]);\n                    }\n                }\n            });\n        } else {\n            // get all active tabs and not disabled\n            const activeTabs = this.tabsButton.filter((tab) => tab.active && !tab.disabled);\n\n            // if there is no active tab set, activate the first\n            if (activeTabs.length === 0) {\n                // get all not disabled tabs\n                const enabledTabs = this.tabsButton.filter((tab) => !tab.disabled);\n                if (enabledTabs.length > 0) {\n                    this.selectTab(enabledTabs[0]);\n                }\n            } else {\n                this.selectTab(activeTabs[0]);\n            }\n        }\n\n        // event\n        this.tabsButton.toArray().forEach((tabFn) => tabFn.buttonClick.subscribe((selectedTab) => {\n            // decativate all tabs\n            this.deactivateAllTabs();\n\n            this.selectTab(selectedTab, true);\n        }));\n\n    }\n\n    /**\n     * Select a tab according number, tab id or CdTabButtonComponent\n     */\n    public select(tab: number | string | CdTabButtonComponent) {\n        return new Promise<boolean>((resolve) => {\n            this.getTab(tab).then((result) => {\n                if (result !== null) {\n                    this.deactivateAllTabs();\n                    this.selectTab(result.tabButton, true);\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            }).catch(() => resolve(true));\n        });\n    }\n\n    /**\n     * Get selected component\n     */\n    public getSelected() {\n        return new Promise<CdTabBarInterface|null>((resolve) => {\n            let activeFound = false;\n            let index = 0;\n            this.tabsButton.toArray().forEach((tabFn) => {\n                if (tabFn.active === true) {\n                    resolve({\n                        num: index,\n                        tabId: tabFn.tab ? tabFn.tab : null,\n                        tabButton: tabFn\n                    });\n                    activeFound = true;\n                }\n                index++;\n            });\n            if (activeFound === false) {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Get the tab according number, tab Id or CdTabButtonComponent\n     */\n    public getTab(tabRef: number | string | CdTabButtonComponent) {\n        return new Promise<CdTabBarInterface|null>((resolve) => {\n            let tabFound = false;\n            let index = 0;\n            if (typeof tabRef === 'number') {\n                const selectedIndex = tabRef as number;\n                this.tabsButton.toArray().forEach((tabFn) => {\n                    if (index === selectedIndex) {\n                        resolve({\n                            num: index,\n                            tabId: tabFn.tab ? tabFn.tab : null,\n                            tabButton: tabFn\n                        });\n                        tabFound = true;\n                    }\n                    index++;\n                });\n            } else if (typeof tabRef === 'string') {\n                const selectedId = tabRef as string;\n                this.tabsButton.toArray().forEach((tabFn) => {\n                    if (tabFn.tab === selectedId) {\n                        resolve({\n                            num: index,\n                            tabId: tabFn.tab,\n                            tabButton: tabFn\n                        });\n                        tabFound = true;\n                    }\n                    index++;\n                });\n            } else if (tabRef instanceof CdTabButtonComponent) {\n                resolve({\n                    num: this.tabsButton.toArray().indexOf(tabRef),\n                    tabId: tabRef.tab ? tabRef.tab : null,\n                    tabButton: tabRef\n                });\n            }\n            if (tabFound === false) {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Select a tab\n     */\n    private selectTab(tabToSelect: CdTabButtonComponent, routing = false) {\n        // activate the tab title the user has clicked on.\n        tabToSelect.selected = true;\n\n        // if router link is defined, use router\n        if (routing && tabToSelect.routerLink && tabToSelect.routerLink.length > 0) {\n            this.router.navigate(tabToSelect.routerLink);\n        }\n\n        // notify the cd-tabs component for tab selection\n        this.emitTabSelected(tabToSelect);\n    }\n\n    /**\n     * Deactivate all tabs\n     */\n    private deactivateAllTabs() {\n        this.tabsButton.toArray().forEach((tabFn) => tabFn.selected = false);\n    }\n\n    /**\n     * Emit the event {tabSelectedEvent}\n     */\n    private emitTabSelected(selectedTab: CdTabButtonComponent) {\n        this.tabSelectedEvent.emit({\n            num: this.tabsButton.toArray().indexOf(selectedTab),\n            tabId: selectedTab.tab ? selectedTab.tab : null,\n            tabButton: selectedTab\n        });\n    }\n\n    /**\n     * Build the CSS class of cd-tab-bar\n     */\n    private buildCss() {\n        let className = this.baseClass;\n\n        if (this.colorValue) {\n            className += 'ion-color ion-color-' + this.colorValue + ' ';\n        }\n\n        if (this.elt && this.elt.nativeElement) {\n            this.elt.nativeElement.className = className;\n        }\n    }\n}\n","import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input,\n  Output\n} from '@angular/core';\n\n@Component({\n    selector: 'cd-tab-content',\n    template: `<div [hidden]=\"!activeState\" [class]=\"className\"><ng-content></ng-content></div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CdTabContentComponent implements AfterViewInit {\n    @Input() id: string;\n    @Input()\n    set active(value: boolean) {\n       this.activeState = value;\n       this.cdr.detectChanges();\n    }\n\n    public activeState = false;\n    public className: string;\n\n    /**\n     * Content of tab\n     */\n    @Output() get content() {\n        if (this.elt && this.elt.nativeElement && this.elt.nativeElement.childNodes[0]) {\n            return this.elt.nativeElement.childNodes[0].innerHTML;\n        }\n        return '';\n    }\n\n    constructor(private elt: ElementRef, private cdr: ChangeDetectorRef) {}\n\n    ngAfterViewInit() {\n        this.className = this.elt.nativeElement.className;\n        this.elt.nativeElement.className = '';\n        this.cdr.detectChanges();\n    }\n}\n","import {\n    AfterContentInit, Component, ContentChild, ContentChildren, EventEmitter, Input, Output,\n    QueryList\n} from '@angular/core';\nimport {CdTabBarComponent, CdTabBarInterface} from './cd-tab-bar.component';\nimport {CdTabContentComponent} from './cd-tab-content.component';\nimport {CdTabButtonComponent} from './cd-tab-button.component';\n\nexport interface CdTabContentInterface extends CdTabBarInterface {\n    tabContent?: CdTabContentComponent;\n}\n\nexport interface CdTabInterface {\n    num: number;\n    tabId: string;\n}\n\n@Component({\n    selector: 'cd-tabs',\n    template: `\n      <div class=\"tabs-container\" [class.vertical]=\"disposition === 'vertical'\">\n        <ng-content></ng-content>\n      </div>`,\n    styles: [`.vertical {\n        display: flex;\n    }`]\n})\nexport class CdTabsComponent implements AfterContentInit {\n\n    @ContentChild(CdTabBarComponent, {static: false}) tabBar: CdTabBarComponent;\n    @ContentChildren(CdTabContentComponent) tabsContent: QueryList<CdTabContentComponent>;\n\n    @Output() tabContentChanged = new EventEmitter<CdTabContentInterface|null>();\n    @Output() tabChanged = new EventEmitter<CdTabInterface|null>();\n\n    @Input() selectMode = 'config';\n    @Input() displayMode = 'default';\n    @Input() disposition = '';\n\n    ngAfterContentInit() {\n        this.tabBar.tabSelectedEvent.subscribe((tabData) => this.activeTabContent(tabData));\n\n        this.tabBar.selectMode = this.selectMode;\n        this.tabBar.displayMode = this.displayMode;\n        this.tabBar.disposition = this.disposition;\n    }\n\n    /**\n     * Select a tab according num, tab id or CdTabButtonComponent\n     */\n    public select(tab: number | string | CdTabButtonComponent) {\n        return new Promise<boolean>((resolve) => {\n            if (this.tabBar) {\n                this.tabBar.select(tab)\n                    .then((result) => resolve(result))\n                    .catch(() => resolve(false));\n            } else {\n                resolve(false);\n            }\n        });\n    }\n\n    /**\n     * Get selected tab\n     */\n    public getSelected() {\n        return new Promise<CdTabContentInterface | null>((resolve) => {\n            if (this.tabBar) {\n                this.tabBar.getSelected().then((result) => {\n                    if (result !== null) {\n                        resolve({\n                            num: result.num,\n                            tabId: result.tabId,\n                            tabButton: result.tabButton,\n                            tabContent: this.getActivatedTabContent()\n                        });\n                    } else {\n                        resolve(null);\n                    }\n                }).catch(() => resolve(null));\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Get a tab according number, tab id or CdTabButtonComponent\n     */\n    public getTab(tab: number | string | CdTabButtonComponent) {\n        return new Promise<CdTabContentInterface | null>((resolve) => {\n            if (this.tabBar) {\n                this.tabBar.getTab(tab).then((result) => {\n                    if (result !== null) {\n                        resolve({\n                            num: result.num,\n                            tabId: result.tabId,\n                            tabButton: result.tabButton,\n                            tabContent: this.getActivatedTabContent()\n                        });\n                    } else {\n                        resolve(null);\n                    }\n                }).catch(() => resolve(null));\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Ge the activated tab content\n     */\n    private getActivatedTabContent() {\n        this.tabsContent.toArray().forEach(tabFn => {\n            if (tabFn.activeState === true) {\n                return tabFn;\n            }\n        });\n        return null;\n    }\n\n    /**\n     * Active the tab content\n     */\n    private activeTabContent(tabData: CdTabBarInterface) {\n        let index = 0;\n        this.tabChanged.emit({\n            num: tabData.num,\n            tabId: tabData.tabId\n        });\n        this.tabsContent.toArray().forEach(tabFn => {\n            tabFn.active = false;\n            if (tabData.tabId) {\n                if (tabData.tabId === tabFn.id) {\n                    tabFn.active = true;\n                    this.emitTabContentChanged(tabData, tabFn);\n                }\n            } else {\n                if (index === tabData.num) {\n                    tabFn.active = true;\n                    this.emitTabContentChanged(tabData, tabFn);\n                }\n            }\n            index++;\n        });\n    }\n\n    /**\n     * Emit the event when tab changed\n     */\n    private emitTabContentChanged(tabBar: CdTabBarInterface, tabCnt: CdTabContentComponent) {\n        this.tabContentChanged.emit({\n            num: tabBar.num,\n            tabId: tabBar.tabId,\n            tabButton: tabBar.tabButton,\n            tabContent: tabCnt\n        });\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CdTabsComponent} from './cd-tabs.component';\nimport {CdTabBarComponent} from './cd-tab-bar.component';\nimport {CdTabButtonComponent} from './cd-tab-button.component';\nimport {CdTabContentComponent} from './cd-tab-content.component';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n    declarations: [\n        CdTabsComponent,\n        CdTabBarComponent,\n        CdTabButtonComponent,\n        CdTabContentComponent\n    ],\n    entryComponents: [CdTabsComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [CdTabsComponent, CdTabBarComponent, CdTabButtonComponent, CdTabContentComponent]\n})\nexport class CdTabsModule {\n}\n"],"names":[],"mappings":"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"}