{"version":3,"file":"angular-cd-tabs.js","sources":["ng://angular-cd-tabs/lib/cd-tab-button.component.ts","ng://angular-cd-tabs/lib/cd-tab-bar.component.ts","ng://angular-cd-tabs/lib/cd-tab-content.component.ts","ng://angular-cd-tabs/lib/cd-tabs.component.ts","ng://angular-cd-tabs/lib/cd-tabs.module.ts"],"sourcesContent":["import {AfterContentInit, Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'cd-tab-button',\n    styleUrls: ['./cd-tab-button.component.scss'],\n    template: `\n        <ng-content></ng-content>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CdTabButtonComponent implements AfterContentInit {\n    @Output() buttonClick = new EventEmitter<CdTabButtonComponent>();\n\n    @Output()\n    get content() {\n        if (this.eltRef && this.eltRef.nativeElement && this.eltRef.nativeElement.childNodes[0]) {\n            return this.eltRef.nativeElement.childNodes[0].innerHTML;\n        }\n        return '';\n    }\n\n    @Input() ripple: string;\n    @Input() tab: string;\n    @Input() routerLink: Array<string>;\n    @Input() iconPosition = 'center';\n    @Input() disabled: boolean;\n\n    @Input()\n    set selected(value) {\n        this.active = value;\n        this.buildCss();\n    }\n\n    active: boolean;\n    elt: HTMLElement;\n\n    @HostListener('click', ['$event.x', '$event.y'])\n    onClick(coordX, coordY) {\n        this.buttonClick.emit(this);\n\n        if (this.ripple === 'unbounded' || this.ripple === 'bounded') {\n            this.addRipple(coordX, coordY);\n        }\n    }\n\n    constructor(private eltRef: ElementRef) {\n    }\n\n    private get hasLabel() {\n        return !!this.elt.querySelector('ion-label');\n    }\n\n    private get hasIcon() {\n        return !!this.elt.querySelector('ion-icon');\n    }\n\n    ngAfterContentInit() {\n        this.elt = this.eltRef.nativeElement;\n\n        this.buildCss();\n    }\n\n    /**\n     * Add Ripple to tab button\n     */\n    async addRipple(x: number, y: number) {\n        return new Promise<() => void>(resolve => {\n            const rect = this.elt.getBoundingClientRect();\n            const width = rect.width;\n            const height = rect.height;\n            const hypotenuse = Math.sqrt(width * width + height * height);\n            const maxDim = Math.max(height, width);\n            const maxRadius = this.ripple === 'bounded' ? maxDim : hypotenuse + PADDING;\n            const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n            const finalScale = maxRadius / initialSize;\n            let posX = x - rect.left;\n            let posY = y - rect.top;\n            if (this.ripple === 'bounded') {\n                posX = width * 0.5;\n                posY = height * 0.5;\n            }\n            const styleX = posX - initialSize * 0.5;\n            const styleY = posY - initialSize * 0.5;\n            const moveX = width * 0.5 - posX;\n            const moveY = height * 0.5 - posY;\n\n            const div = document.createElement('div');\n            div.classList.add('cd-ripple-effect');\n            const style = div.style;\n            style.top = styleY + 'px';\n            style.left = styleX + 'px';\n            style.width = style.height = initialSize + 'px';\n            style.setProperty('--final-scale', `${finalScale}`);\n            style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n\n            const container = this.elt.shadowRoot || this.elt;\n            container.appendChild(div);\n            setTimeout(() => {\n                removeRipple(div);\n\n                resolve(() => {\n                });\n            }, 225 + 100);\n        });\n    }\n\n    /**\n     * Build Css for component\n     */\n    private buildCss() {\n        let className = 'cd-tab-button ';\n        if (this.active) {\n            className += 'cd-tab-selected ';\n        }\n        if (this.hasIcon) {\n            className += 'cd-tab-has-icon ';\n        }\n        if (this.hasLabel) {\n            className += 'cd-tab-has-label ';\n        }\n        if (this.hasLabel && !this.hasIcon) {\n            className += 'cd-tab-has-label-only ';\n        }\n        if (!this.hasLabel && this.hasIcon) {\n            className += 'cd-tab-has-icon-only ';\n        }\n        if (this.iconPosition === 'start') {\n            className += 'cd-tab-icon-start ';\n        }\n        if (this.iconPosition === 'end') {\n            className += 'cd-tab-icon-end ';\n        }\n        if (this.disabled === true) {\n            className += 'cd-tab-disabled ';\n        }\n\n        this.elt.className = className;\n    }\n}\n\nconst removeRipple = (ripple: HTMLElement) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\n\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\n","import {\n    AfterViewInit, Component, ContentChildren, ElementRef, EventEmitter,\n    Input, OnInit, Output,\n    QueryList\n} from '@angular/core';\nimport {CdTabButtonComponent} from './cd-tab-button.component';\nimport {NavigationEnd, Router} from '@angular/router';\n\nexport interface CdTabBarInterface {\n    num: number;\n    tabId: string;\n    tabButton: CdTabButtonComponent;\n}\n\n@Component({\n    selector: 'cd-tab-bar',\n    template: `\n      <div class=\"bar-container\"\n           [class.vertical]=\"disposition === 'vertical'\"\n           [class.align-center]=\"disposition === 'center'\"\n           [class.align-right]=\"disposition === 'right'\"\n           [class.segments]=\"displayMode === 'segments'\">\n        <ng-content></ng-content>\n      </div>`,\n    styleUrls: ['./cd-tab-bar.component.scss']\n})\nexport class CdTabBarComponent implements AfterViewInit, OnInit {\n    @ContentChildren(CdTabButtonComponent) tabsButton: QueryList<CdTabButtonComponent>;\n\n    @Output() tabSelectedEvent = new EventEmitter<CdTabBarInterface>();\n\n    @Output()\n    get buttons() {\n        return this.tabsButton;\n    }\n\n    @Input() disposition = '';\n    @Input() displayMode = 'default';\n\n    @Input()\n    set selected(value) {\n        this.active = value;\n    }\n\n    @Input()\n    set color(value) {\n        this.colorValue = value;\n        this.buildCss();\n    }\n\n    active: boolean;\n    colorValue: string;\n    selectMode: string;\n    baseClass = '';\n\n    constructor(private elt: ElementRef, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (this.active === undefined) {\n            this.active = false;\n        }\n        if (this.elt && this.elt.nativeElement) {\n            this.baseClass = this.elt.nativeElement.className;\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.selectMode === 'router') {\n            // deactivate all tabs if router link defined\n            this.tabsButton.toArray().forEach((tabFn) => {\n                tabFn.active = false;\n            });\n\n            // look for select tab according route\n            this.router.events.subscribe((res) => {\n                if (res instanceof NavigationEnd) {\n                    const relatedTabs = this.tabsButton.filter((tabFn) =>\n                        (tabFn.routerLink.join('/').length > 3 && res.url.indexOf(tabFn.routerLink.join('/')) >= 0) ||\n                        (tabFn.routerLink.join('/') === res.url));\n\n                    // decativate all tabs\n                    this.deactivateAllTabs();\n\n                    // if related url found\n                    if (relatedTabs.length > 0) {\n                        this.selectTab(relatedTabs[0]);\n                    }\n                }\n            });\n        } else {\n            // get all active tabs and not disabled\n            const activeTabs = this.tabsButton.filter((tab) => tab.active && !tab.disabled);\n\n            // if there is no active tab set, activate the first\n            if (activeTabs.length === 0) {\n                // get all not disabled tabs\n                const enabledTabs = this.tabsButton.filter((tab) => !tab.disabled);\n                if (enabledTabs.length > 0) {\n                    this.selectTab(enabledTabs[0]);\n                }\n            } else {\n                this.selectTab(activeTabs[0]);\n            }\n        }\n\n        // event\n        this.tabsButton.toArray().forEach((tabFn) => tabFn.buttonClick.subscribe((selectedTab) => {\n            // decativate all tabs\n            this.deactivateAllTabs();\n\n            this.selectTab(selectedTab, true);\n        }));\n\n    }\n\n    /**\n     * Select a tab according number, tab id or CdTabButtonComponent\n     */\n    public select(tab: number | string | CdTabButtonComponent) {\n        return new Promise<boolean>((resolve) => {\n            this.getTab(tab).then((result) => {\n                if (result !== null) {\n                    this.deactivateAllTabs();\n                    this.selectTab(result.tabButton, true);\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            }).catch(() => resolve(true));\n        });\n    }\n\n    /**\n     * Get selected component\n     */\n    public getSelected() {\n        return new Promise<CdTabBarInterface|null>((resolve) => {\n            let activeFound = false;\n            let index = 0;\n            this.tabsButton.toArray().forEach((tabFn) => {\n                if (tabFn.active === true) {\n                    resolve({\n                        num: index,\n                        tabId: tabFn.tab ? tabFn.tab : null,\n                        tabButton: tabFn\n                    });\n                    activeFound = true;\n                }\n                index++;\n            });\n            if (activeFound === false) {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Get the tab according number, tab Id or CdTabButtonComponent\n     */\n    public getTab(tabRef: number | string | CdTabButtonComponent) {\n        return new Promise<CdTabBarInterface|null>((resolve) => {\n            let tabFound = false;\n            let index = 0;\n            if (typeof tabRef === 'number') {\n                const selectedIndex = tabRef as number;\n                this.tabsButton.toArray().forEach((tabFn) => {\n                    if (index === selectedIndex) {\n                        resolve({\n                            num: index,\n                            tabId: tabFn.tab ? tabFn.tab : null,\n                            tabButton: tabFn\n                        });\n                        tabFound = true;\n                    }\n                    index++;\n                });\n            } else if (typeof tabRef === 'string') {\n                const selectedId = tabRef as string;\n                this.tabsButton.toArray().forEach((tabFn) => {\n                    if (tabFn.tab === selectedId) {\n                        resolve({\n                            num: index,\n                            tabId: tabFn.tab,\n                            tabButton: tabFn\n                        });\n                        tabFound = true;\n                    }\n                    index++;\n                });\n            } else if (tabRef instanceof CdTabButtonComponent) {\n                resolve({\n                    num: this.tabsButton.toArray().indexOf(tabRef),\n                    tabId: tabRef.tab ? tabRef.tab : null,\n                    tabButton: tabRef\n                });\n            }\n            if (tabFound === false) {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Select a tab\n     */\n    private selectTab(tabToSelect: CdTabButtonComponent, routing = false) {\n        // activate the tab title the user has clicked on.\n        tabToSelect.selected = true;\n\n        // if router link is defined, use router\n        if (routing && tabToSelect.routerLink && tabToSelect.routerLink.length > 0) {\n            this.router.navigate(tabToSelect.routerLink);\n        }\n\n        // notify the cd-tabs component for tab selection\n        this.emitTabSelected(tabToSelect);\n    }\n\n    /**\n     * Deactivate all tabs\n     */\n    private deactivateAllTabs() {\n        this.tabsButton.toArray().forEach((tabFn) => tabFn.selected = false);\n    }\n\n    /**\n     * Emit the event {tabSelectedEvent}\n     */\n    private emitTabSelected(selectedTab: CdTabButtonComponent) {\n        this.tabSelectedEvent.emit({\n            num: this.tabsButton.toArray().indexOf(selectedTab),\n            tabId: selectedTab.tab ? selectedTab.tab : null,\n            tabButton: selectedTab\n        });\n    }\n\n    /**\n     * Build the CSS class of cd-tab-bar\n     */\n    private buildCss() {\n        let className = this.baseClass;\n\n        if (this.colorValue) {\n            className += 'ion-color ion-color-' + this.colorValue + ' ';\n        }\n\n        if (this.elt && this.elt.nativeElement) {\n            this.elt.nativeElement.className = className;\n        }\n    }\n}\n","import {AfterContentInit, Component, ElementRef, Input, Output} from '@angular/core';\n\n@Component({\n    selector: 'cd-tab-content',\n    template: `<div [hidden]=\"!active\" [class]=\"className\"><ng-content></ng-content></div>`\n})\nexport class CdTabContentComponent implements AfterContentInit {\n    @Input() id: string;\n    @Input() active = false;\n\n    className: string;\n\n    /**\n     * Content of tab\n     */\n    @Output() get content() {\n        if (this.elt && this.elt.nativeElement && this.elt.nativeElement.childNodes[0]) {\n            return this.elt.nativeElement.childNodes[0].innerHTML;\n        }\n        return '';\n    }\n\n    constructor(private elt: ElementRef) {}\n\n    ngAfterContentInit() {\n        this.className = this.elt.nativeElement.className;\n        this.elt.nativeElement.className = '';\n    }\n}\n","import {\n    AfterContentInit, Component, ContentChild, ContentChildren, EventEmitter, Input, Output,\n    QueryList\n} from '@angular/core';\nimport {CdTabBarComponent, CdTabBarInterface} from './cd-tab-bar.component';\nimport {CdTabContentComponent} from './cd-tab-content.component';\nimport {CdTabButtonComponent} from './cd-tab-button.component';\n\nexport interface CdTabInterface extends CdTabBarInterface {\n    tabContent?: CdTabContentComponent;\n}\n\n@Component({\n    selector: 'cd-tabs',\n    template: `\n      <div class=\"tabs-container\" [class.vertical]=\"disposition === 'vertical'\">\n        <ng-content></ng-content>\n      </div>`,\n    styles: [`.vertical {\n        display: flex;\n    }`]\n})\nexport class CdTabsComponent implements AfterContentInit {\n\n    @ContentChild(CdTabBarComponent, {static: false}) tabBar: CdTabBarComponent;\n    @ContentChildren(CdTabContentComponent) tabsContent: QueryList<CdTabContentComponent>;\n\n    @Output() tabChangedEvent = new EventEmitter<CdTabInterface|null>();\n\n    @Input() selectMode = 'config';\n    @Input() displayMode = 'default';\n    @Input() disposition = '';\n\n    ngAfterContentInit() {\n        this.tabBar.tabSelectedEvent.subscribe((tabData) => this.activeTabContent(tabData));\n\n        this.tabBar.selectMode = this.selectMode;\n        this.tabBar.displayMode = this.displayMode;\n        this.tabBar.disposition = this.disposition;\n    }\n\n    /**\n     * Select a tab according num, tab id or CdTabButtonComponent\n     */\n    public select(tab: number | string | CdTabButtonComponent) {\n        return new Promise<boolean>((resolve) => {\n            if (this.tabBar) {\n                this.tabBar.select(tab)\n                    .then((result) => resolve(result))\n                    .catch(() => resolve(false));\n            } else {\n                resolve(false);\n            }\n        });\n    }\n\n    /**\n     * Get selected tab\n     */\n    public getSelected() {\n        return new Promise<CdTabInterface | null>((resolve) => {\n            if (this.tabBar) {\n                this.tabBar.getSelected().then((result) => {\n                    if (result !== null) {\n                        resolve({\n                            num: result.num,\n                            tabId: result.tabId,\n                            tabButton: result.tabButton,\n                            tabContent: this.getActivatedTabContent()\n                        });\n                    } else {\n                        resolve(null);\n                    }\n                }).catch(() => resolve(null));\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Get a tab according number, tab id or CdTabButtonComponent\n     */\n    public getTab(tab: number | string | CdTabButtonComponent) {\n        return new Promise<CdTabInterface | null>((resolve) => {\n            if (this.tabBar) {\n                this.tabBar.getTab(tab).then((result) => {\n                    if (result !== null) {\n                        resolve({\n                            num: result.num,\n                            tabId: result.tabId,\n                            tabButton: result.tabButton,\n                            tabContent: this.getActivatedTabContent()\n                        });\n                    } else {\n                        resolve(null);\n                    }\n                }).catch(() => resolve(null));\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Ge the activated tab content\n     */\n    private getActivatedTabContent() {\n        this.tabsContent.toArray().forEach(tabFn => {\n            if (tabFn.active === true) {\n                return tabFn;\n            }\n        });\n        return null;\n    }\n\n    /**\n     * Active the tab content\n     */\n    private activeTabContent(tabData: CdTabBarInterface) {\n        let index = 0;\n        this.tabsContent.toArray().forEach(tabFn => {\n            tabFn.active = false;\n            if (tabData.tabId) {\n                if (tabData.tabId === tabFn.id) {\n                    tabFn.active = true;\n                    this.emitTabChanged(tabData, tabFn);\n                }\n            } else {\n                if (index === tabData.num) {\n                    tabFn.active = true;\n                    this.emitTabChanged(tabData, tabFn);\n                }\n            }\n            index++;\n        });\n    }\n\n    /**\n     * Emit the event when tab changed\n     */\n    private emitTabChanged(tabBar: CdTabBarInterface, tabCnt: CdTabContentComponent) {\n        this.tabChangedEvent.emit({\n            num: tabBar.num,\n            tabId: tabBar.tabId,\n            tabButton: tabBar.tabButton,\n            tabContent: tabCnt\n        });\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CdTabsComponent} from './cd-tabs.component';\nimport {CdTabBarComponent} from './cd-tab-bar.component';\nimport {CdTabButtonComponent} from './cd-tab-button.component';\nimport {CdTabContentComponent} from './cd-tab-content.component';\nimport {RouterModule} from '@angular/router';\n\n// TODO: To run \"ionic build --prod\", rename the library \"cd-tabs\" as \"angular-cd-tabs\" all needed place\n\n\n@NgModule({\n    declarations: [\n        CdTabsComponent,\n        CdTabBarComponent,\n        CdTabButtonComponent,\n        CdTabContentComponent\n    ],\n    entryComponents: [CdTabsComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [CdTabsComponent, CdTabBarComponent, CdTabButtonComponent, CdTabContentComponent]\n})\nexport class CdTabsModule {\n}\n"],"names":[],"mappings":"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"}